import cv2
import numpy as np
from google.colab.patches import cv2_imshow
from gtts import gTTS
from IPython.display import display, Audio

# Load YOLOv3 model
net = cv2.dnn.readNet("yolov3.weights", "yolov3.cfg")
classes = []
with open("coco.names", "r") as f:
    classes = [line.strip() for line in f.readlines()]
layer_names = net.getLayerNames()
output_layers = [layer_names[i - 1] for i in net.getUnconnectedOutLayers()]

# Function to perform object detection
def detect_objects(frame):
    height, width, channels = frame.shape

    blob = cv2.dnn.blobFromImage(frame, 0.00392, (416, 416), (0, 0, 0), True, crop=False)
    net.setInput(blob)
    outs = net.forward(output_layers)

    class_ids = []
    confidences = []
    boxes = []

    for out in outs:
        for detection in out:
            scores = detection[5:]
            class_id = np.argmax(scores)
            confidence = scores[class_id]
            if confidence > 0.5:
                center_x = int(detection[0] * width)
                center_y = int(detection[1] * height)
                w = int(detection[2] * width)
                h = int(detection[3] * height)

                x = int(center_x - w / 2)
                y = int(center_y - h / 2)

                boxes.append([x, y, w, h])
                confidences.append(float(confidence))
                class_ids.append(class_id)

    indexes = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)

    detected_objects = set()
    font = cv2.FONT_HERSHEY_PLAIN
    for i in range(len(boxes)):
        if i in indexes:
            x, y, w, h = boxes[i]
            label = str(classes[class_ids[i]])
            color = (0, 255, 0)
            cv2.rectangle(frame, (x, y), (x + w, y + h), color, 2)
            cv2.putText(frame, label, (x, y + 30), font, 2, color, 2)
            detected_objects.add(label)

    return frame, detected_objects

# Function to generate and play audio feedback
def speak(text):
    tts = gTTS(text)
    tts.save('output.mp3')
    display(Audio('output.mp3', autoplay=True))

# Main loop (for demonstration, we'll process a single image)
from google.colab import files
uploaded = files.upload()

for filename in uploaded.keys():
    image = cv2.imread(filename)
    processed_image, detected_objects = detect_objects(image)

    cv2_imshow(processed_image)

    if detected_objects:
        feedback = f"I see {', '.join(detected_objects)}"
        print(feedback)
        speak(feedback)
    else:
        print("No objects detected")
        speak("No objects detected")
